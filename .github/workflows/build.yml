name: CI
# Config env
env:
  FLUTTER_VERSION: "stable"
  FLUTTER_SDK: "2.5.2"
  BUILD_DIR: "./mobile_app"
  BUILD_BRANCH: "master"
  ENV: "dev"
  
on:
  repository_dispatch:
    types: 
        - webhook
  workflow_dispatch:
jobs:
  build_apk:
    name: APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Authentication
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Setting action
        run: echo "machine gitlab.com login ${{ secrets.TOKEN_NAME }} password ${{ secrets.TOKEN_KEY }}" > ~/.netrc

      # Install flutter sdk
      - name: Installing Flutter
        uses: britannio/action-install-flutter@v1.0
        with:
          version: ${{ env.FLUTTER_SDK }}
      - name: Flutter doctor
        run: flutter doctor

      # Fetch source code
      - name: Clone
        run: git clone ${{ secrets.REPO }} ${{ env.BUILD_DIR }}
        
      # Run flutter
      - name: Installing dependencies
        run: cd ${{ env.BUILD_DIR }} ; flutter pub get
      - name: Generate code
        run: cd ${{ env.BUILD_DIR }} ; flutter pub run build_runner build
      - name: Build APK
        run: cd ${{ env.BUILD_DIR }} ; flutter build apk -t ./lib/main_${{ env.ENV }}.dart --release --flavor ${{ env.ENV }}
        
      # Deploy
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.BUILD_DIR }}/build/app/outputs/flutter-apk/app-${{ env.ENV }}-release.apk
          tag: ${{ env.BUILD_BRANCH }}
          overwrite: true
          file_glob: true
          body: Build for branch
          
      # Message notify
      - name: Gen URL
        run: echo "URL=https://github.com/hautvfami/vhbuilder/releases/download/${{ env.BUILD_BRANCH }}/app-${{ env.ENV }}-release.apk" >> $GITHUB_ENV
      - name: Gen QR
        run: echo "QR=https://api.qrserver.com/v1/create-qr-code/?data=${{env.URL}}&size=150x150" >> $GITHUB_ENV
      - name: Gen Message
        run: echo "MESSAGE=${{ env.BUILD_BRANCH}} ${{env.ENV}}%0D%0A%0D%0AAPK%0D%0A${{ env.URL }}%0D%0A%0D%0A[](${{ env.QR }})" >> $GITHUB_ENV
      - name: Send to Telegram
        run: curl --location --request GET 'https://api.telegram.org/bot${{secrets.BOT_TOKEN}}/sendMessage?chat_id=${{ secrets.CHAT_ID }}&parse_mode=markdown&text=${{ env.MESSAGE }}'
        

#       - name: Deploy to artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: apk
#           file_glob: true
#           path: ${{ env.BUILD_DIR }}/build/app/outputs/flutter-apk/app-dev-release.apk
#           retention-days: 5

      # This step reads a file from repo and use it for body of the release
      # This works on any self-hosted runner OS
#       - name: Read RELEASE.md and use it as a body of new release
#         id: read_release
#         shell: bash
#         run: |
#           r=$(cat ./RELEASE.md)                       # <--- Read RELEASE.md (Provide correct path as per your repo)
#           r="${r//'%'/'%25'}"                               # Multiline escape sequences for %
#           r="${r//$'\n'/'%0A'}"                             # Multiline escape sequences for '\n'
#           r="${r//$'\r'/'%0D'}"                             # Multiline escape sequences for '\r'
#           echo "::set-output name=RELEASE_BODY::$r"         # <--- Set environment variable
#       - name: Upload binaries to release
#         uses: svenstaro/upload-release-action@v2
#         with:
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           file: ${{ env.BUILD_DIR }}/build/app/outputs/flutter-apk/app-release.apk
#           tag: ${{ github.ref }}
#           overwrite: true
#           file_glob: true
#           body: |
#             ${{ steps.read_release.outputs.RELEASE_BODY }}

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
